'''
一只袋鼠要从河这边跳到河对岸，河很宽，但是河中间打了很多桩子，每隔一米就有一个，每个桩子上都有一个弹簧，
袋鼠跳到弹簧上就可以跳的更远。每个弹簧力量不同，用一个数字代表它的力量，
如果弹簧力量为5，就代表袋鼠下一跳最多能够跳5米，如果为0，就会陷进去无法继续跳跃。
河流一共N米宽，袋鼠初始位置就在第一个弹簧上面，要跳到最后一个弹簧之后就算过河了，
给定每个弹簧的力量，求袋鼠最少需要多少跳能够到达对岸。如果无法到达输出-1


输入描述:
输入分两行，第一行是数组长度N (1 ≤ N ≤ 10000)，第二行是每一项的值，用空格分隔。
输出描述:
输出最少的跳数，无法到达输出-1

'''

N=int(input())
num=list(map(int,input().split()))
#print(num)
mindp=[0,]#第一个桩的最小跳一定是0次
for i in range(1,N+1):#初始化每个桩的最小跳次数
    mindp.append(10001)
    #print(mindp)
for i in range(1,N+1):#依次计算跳到每个桩需要的最小跳次数
    for j in range(1,i+1):#遍历前面所有的桩，找到一个可以跳到当前桩的位置
        if num[i-j]==0:#如果弹力为零，则当前树桩无用，继续下一个
            continue
        if (i-j)+num[i-j]>=i:
            mindp[i]=min(mindp[i],mindp[i-j]+1)
            #print(mindp[i])
if mindp[N]==10001:#统计完所有树桩的最小跳次数后，输出结果
    print(-1)
else:
    print(mindp[N])